version: "3.7"

services:
  mockServer:
    image: mockserver/mockserver:5.13.2
    command: -logLevel DEBUG -serverPort 1090 -proxyRemotePort 80 -proxyRemoteHost www.mock-server.com
    ports:
      - 1080:1090
    environment:
      MOCKSERVER_PROPERTY_FILE: /config/mockserver.properties
      MOCKSERVER_INITIALIZATION_JSON_PATH: /config/initializerJson.json
    volumes:
      - type: bind
        source: ./external_data_mock
        target: /config

  db:
    image: postgres:latest
    environment:
      - "TZ=Europe/Amsterdam"
      - "POSTGRES_USER=root"
      - "POSTGRES_PASSWORD=root"
      - "POSTGRES_DB=streets"
    ports:
      - 5432:5432
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: "/docker-entrypoint-initdb.d/postgres status"
      interval: 20s
      timeout: 15s
      retries: 3

  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
      - 19092:9092
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:19092,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:19092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      zookeeper:
        condition: service_started
      db:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181